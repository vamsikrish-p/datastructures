#include <stdio.h>
#include <stdlib.h>

int main() {
    int arr[] = {12, 11, 13, 5, 6, 7};
    int n = sizeof(arr) / sizeof(arr[0]);

    int stack[n][2];
    int top = -1;
    stack[++top][0] = 0;
    stack[top][1] = n - 1;

    while (top >= 0) {
        int l = stack[top][0];
        int r = stack[top--][1];
        
        if (l < r) {
            int m = l + (r - l) / 2;

            stack[++top][0] = l;
            stack[top][1] = m;

            stack[++top][0] = m + 1;
            stack[top][1] = r;

            int n1 = m - l + 1;
            int n2 = r - m;
            int *L = (int *)malloc(n1 * sizeof(int));
            int *R = (int *)malloc(n2 * sizeof(int));

            for (int i = 0; i < n1; i++) L[i] = arr[l + i];
            for (int j = 0; j < n2; j++) R[j] = arr[m + 1 + j];

            int i = 0, j = 0, k = l;
            while (i < n1 && j < n2) {
                if (L[i] <= R[j]) arr[k++] = L[i++];
                else arr[k++] = R[j++];
            }
            while (i < n1) arr[k++] = L[i++];
            while (j < n2) arr[k++] = R[j++];

            free(L);
            free(R);
        }
    }

    for (int i = 0; i < n; i++) printf("%d ", arr[i]);
    printf("\n");

    return 0;
}
